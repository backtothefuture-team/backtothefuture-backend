buildscript {
	repositories {
		// buildscript의 의존성을 위한 저장소
		mavenCentral()
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.epages.restdocs-api-spec' version '0.19.1'
}

allprojects {
	// Java 버전 설정
	sourceCompatibility = "17"
	targetCompatibility = "17"

	repositories {
		// 필요한 라이브러리들을 받아올 원격 저장소
		mavenCentral()
	}
}

subprojects {
	apply plugin: "java"
	apply plugin: "org.springframework.boot"
	apply plugin: "io.spring.dependency-management"

	group = "com.backtothefuture"

	// 설정
	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
		asciidoctorExt
	}

	// 의존성 관리
	dependencies {
		implementation "org.springframework.boot:spring-boot-starter-data-jpa"
		implementation "org.springframework.boot:spring-boot-starter-web"

		// lombok
		implementation "org.projectlombok:lombok"
		annotationProcessor "org.projectlombok:lombok"
		testAnnotationProcessor "org.projectlombok:lombok"

		testImplementation "org.springframework.boot:spring-boot-starter-test"
		testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
		testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.19.1'
	}

	// 테스트 설정
	test {
		useJUnitPlatform()
	}

	// clean 설정
	clean {
		delete file('src/main/generated') // annotation processor 생성물 생성위치
	}
}

task copyOpenApiSpecsToDocsDir(type: Copy) {
	// member 프로젝트의 openapi3 스크립트 호출 :: 결과물을 /docs/openapi 로 복사한다.
	dependsOn ':api:member:openapi3'
	from "${project(':api:member').buildDir}/api-spec/member-openapi.yaml"
	into "${project.rootDir}/docs/openapi"
}